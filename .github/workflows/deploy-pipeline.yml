name: deploy-pipeline

on:
  workflow_run:
    workflows: ["pre-deploy"]
    types:
      - completed
      
  workflow_dispatch:
    inputs:
      git-ref:
        description: Git Ref (Optional)    
        required: false

jobs:
  codacy:
    name: Codacy report
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name : Tests
        run: npm i && npm run coverage

      - name: Codacy reporter
        uses: codacy/codacy-coverage-reporter-action@master
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: coverage/lcov.info 
  deploy-release:
    if: startsWith(github.ref, 'refs/heads/release')
    name: Deploy - release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Authentication AWS  
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{secrets.CICDFARGATE_DEVELOPER_ACESSKEY}}
          aws-secret-access-key: ${{secrets.CICDFARGATE_DEVELOPER_SECRETKEY}}
          aws-region: sa-east-1

      - name: Build && tag Docker image
        run : docker build . -t <TO_CHANGE>/vxboilerplate-stg --build-arg ENV_FILE=stg

      - name: Deploy
        run : |
              aws ecr get-login-password --region sa-east-1 | docker login --username AWS --password-stdin <TO_CHANGE>
              docker push <TO_CHANGE>/vxboilerplate-stg:latest              
              aws ecs update-service --cluster VxMicroservices-STG --service SVC-vxboilerplate-stg --force-new-deployment  
              
  deploy-production: #############JOB#############
    if: github.ref == 'refs/heads/master'
    name: Deploy - PROD
    runs-on: ubuntu-latest
    steps:  
      - uses: actions/checkout@v2

      - name: Authentication AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{secrets.CICDFARGATE_PRODUCTION_ACESSKEY}}
          aws-secret-access-key: ${{secrets.CICDFARGATE_PRODUCTION_SECRETKEY}}
          aws-region: sa-east-1
  
      - name: Build && tag Docker image
        run : docker build . -t <TO_CHANGE>/vxboilerplate --build-arg ENV_FILE=prod

      - name: Deploy
        run : |
              aws ecr get-login-password --region sa-east-1 | docker login --username AWS --password-stdin <TO_CHANGE>
              docker push <TO_CHANGE>/vxboilerplate              
              aws ecs update-service --cluster VxMicroservices-PRD --service SVC-vxboilerplate --force-new-deployment  

